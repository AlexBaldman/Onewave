// Generated by data binding compiler. Do not edit!
package com.nanowheel.nanoux.nanowheel.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.material.button.MaterialButton;
import com.nanowheel.nanoux.nanowheel.R;
import com.nanowheel.nanoux.nanowheel.model.OWDevice;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentDiagnoticsBinding extends ViewDataBinding {
  @NonNull
  public final TextView distanceRecord;

  @NonNull
  public final TextView distanceTotal;

  @NonNull
  public final ImageView pitch;

  @NonNull
  public final TextView pitchText;

  @NonNull
  public final MaterialButton refreshButton;

  @NonNull
  public final ImageView roll;

  @NonNull
  public final TextView rollText;

  @NonNull
  public final TextView speedRecord;

  @Bindable
  protected OWDevice mOwdevice;

  protected FragmentDiagnoticsBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView distanceRecord, TextView distanceTotal, ImageView pitch, TextView pitchText,
      MaterialButton refreshButton, ImageView roll, TextView rollText, TextView speedRecord) {
    super(_bindingComponent, _root, _localFieldCount);
    this.distanceRecord = distanceRecord;
    this.distanceTotal = distanceTotal;
    this.pitch = pitch;
    this.pitchText = pitchText;
    this.refreshButton = refreshButton;
    this.roll = roll;
    this.rollText = rollText;
    this.speedRecord = speedRecord;
  }

  public abstract void setOwdevice(@Nullable OWDevice owdevice);

  @Nullable
  public OWDevice getOwdevice() {
    return mOwdevice;
  }

  @NonNull
  public static FragmentDiagnoticsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_diagnotics, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentDiagnoticsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentDiagnoticsBinding>inflateInternal(inflater, R.layout.fragment_diagnotics, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentDiagnoticsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_diagnotics, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentDiagnoticsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentDiagnoticsBinding>inflateInternal(inflater, R.layout.fragment_diagnotics, null, false, component);
  }

  public static FragmentDiagnoticsBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentDiagnoticsBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentDiagnoticsBinding)bind(component, view, R.layout.fragment_diagnotics);
  }
}
